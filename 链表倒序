class HeroNode{
    public int no;
    public String name;
    public String nickname;
    public HeroNode next;

    public HeroNode(int no, String name, String nickname){
        this.no = no;
        this.name = name;
        this.nickname = nickname;
    }
    
    
public void reverseNode(){
        HeroNode newHeadNode = new HeroNode(0,"","");
        HeroNode temp = head.next;
        HeroNode temporaryNode = null;

        while (true){
            if(temp == null){
                break;
            }
            //遍历原来的链表，每遍历一个节点，就将其取出，并放在新的链表 reverseHead 的最前端
            temporaryNode = temp.next;//先暂时保存当前节点的下一个节点，因为后面需要使用
            temp.next = newHeadNode.next;//将 temp 的下一个节点指向新的链表的最前节点（非头节点）
            newHeadNode.next = temp;//将新头节点指向temp完成插入
            temp = temporaryNode;//temp在原节点后移
        }
        head.next = newHeadNode.next;//最后将原头节点指向新链的第一个节点
    }    
